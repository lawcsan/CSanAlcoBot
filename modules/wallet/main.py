from loader import dp
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram_dialog import StartMode
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.kbd import Button, Row, Cancel, Back, Url, Next, Back
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import MessageInput
from models.main_db import User

from loguru import logger

from utils.functions import checkBalance, get_wallet_data


#### start dialog

@dp.message_handler(Command(commands=['wallet']))
async def start(m: types.Message, dialog_manager: DialogManager):
    await dialog_manager.start(WalletSG.receive, mode=StartMode.RESET_STACK)

#### button check_balance
async def check_balance(c: types.CallbackQuery, button: Button, dialog_manager: DialogManager):
    from_user = dialog_manager.event.from_user
    user, created = User.get_or_create(user_id = from_user.id)
    balance = checkBalance(user)
    if balance:
        await c.answer(f'–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {balance}‚ÇΩ!', show_alert = True)
        await dialog_manager.done()
    else:
        await c.answer(f'–ù–∞ –±–∞–ª–∞–Ω—Å –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–æ...', show_alert = True)

#### dialog actions



#### Windows

#### states
class WalletSG(StatesGroup):
    receive = State()
    buy = State()

#### dialogs
wallet_dialog = Dialog(
    Window(
        #Format("–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <b>{balance} TONüíé</b>"),
        Format("–°–µ–π—á–∞—Å –±–∞–ª–∞–Ω—Å –±–µ—Ä—ë—Ç—Å—è –∏–∑ TON Testnet! –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @testgiver_ton_bot\n\n"),
        Format("–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <b>{balance}‚ÇΩ</b>"),
        Format("–ê–¥—Ä–µ—Å –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:\n"),
        Format("<code>{wallet}</code>"),
        Format('–ú–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ <a href="https://app.tonkeeper.com/transfer/{wallet}">Tonkeeper</a>'),
        Format('\n\n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ TON –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å - –æ–±–Ω–æ–≤–∏—Ç–µ –±–∞–ª–∞–Ω—Å'),
        Format('\n<b>–í–Ω–∏–º–∞–Ω–∏–µ! –ö—É—Ä—Å TON –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ —Ä—É–±–ª–∏, –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É <a href="https://www.coingecko.com/ru/–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã/toncoin/rub">CoinGecko</a></b>'),
        Button(Const("–û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å"), id="check_balance", on_click=check_balance),
        Row(Cancel(Const("–ù–∞–∑–∞–¥")),Next(Const("–ö—É–ø–∏—Ç—å TONüíé"))),
        state=WalletSG.receive,
        disable_web_page_preview=True,
    ),
    Window(
        Format("–°–µ–π—á–∞—Å –±–∞–ª–∞–Ω—Å –±–µ—Ä—ë—Ç—Å—è –∏–∑ TON Testnet! –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @testgiver_ton_bot\n\n"),
        Format("<s>–ö—É–ø–∏—Ç—å <b>–ù–ê–°–¢–û–Ø–©–ò–ô</b> TONüíé –º–æ–∂–Ω–æ –ø—Ä—è–º–æ –≤ Telegram, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–µ—Ä–µ–∑ —á–µ—Ä–µ–∑ —ç—Ç–∏—Ö –±–æ—Ç–æ–≤:</s>"),
        #Format("–ö—É–ø–∏—Ç—å TONüíé –º–æ–∂–Ω–æ –ø—Ä—è–º–æ –≤ Telegram, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–µ—Ä–µ–∑ —á–µ—Ä–µ–∑ —ç—Ç–∏—Ö –±–æ—Ç–æ–≤:"),
        Row(
            Url(Const("@CryptoBot"),Const('http://t.me/CryptoBot?start=r-304645')),
            Url(Const("@Wallet"),Const('http://t.me/Wallet'))
        ),
        Back(Const("–ù–∞–∑–∞–¥")),
        state=WalletSG.buy,
        disable_web_page_preview=True,
    ),
    getter=get_wallet_data,
)

#### Windows
